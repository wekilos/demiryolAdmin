{"version":3,"file":"static/js/434.8ca6d27a.chunk.js","mappings":"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","sources":["pages/requests/ImageConfig.jsx","pages/requests/dropFile.jsx","pages/requests/requests.js","utils/axiosIntance.js"],"sourcesContent":["import pdfFile from \"../../img/pdfFile.png\";\nimport pngFile from \"../../img/pngFile.png\";\nimport defaultFile from \"../../img/defaultFile.png\";\n\nexport const ImageConfig = {\n  default: defaultFile,\n  pdf: pdfFile,\n  png: pngFile,\n};","import React from \"react\";\nimport { useRef, useState } from \"react\";\nimport { VscChromeClose } from \"react-icons/vsc\";\nimport { HiOutlineCloudUpload } from \"react-icons/hi\";\nimport { ImageConfig } from \"./ImageConfig\";\nimport PropTypes from \"prop-types\";\n\nconst DropFileInput = (props) => {\n  const wrapperRef = useRef(null);\n  const [fileList, setFileList] = useState([]);\n  const onDragEnter = () => wrapperRef.current.classList.add(\"dragover\");\n  const onDragLeave = () => wrapperRef.current.classList.remove(\"dragover\");\n  const onDrop = () => wrapperRef.current.classList.remove(\"dragover\");\n\n  const onFileDrop = (e) => {\n    const newFile = e.target.files[0];\n    console.log(\"newFile\",newFile)\n    if (newFile) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList);\n      props.onFileChange(updatedList);\n    }\n  };\n\n\n\n  const fileRemove = (file) => {\n    const updatedList = [...fileList];\n    updatedList.splice(fileList.indexOf(file), 1);\n    setFileList(updatedList);\n    props.onFileChange(updatedList);\n  };\n\n  return (\n    <>\n      <div\n        ref={wrapperRef}\n        onDragEnter={onDragEnter}\n        onDragLeave={onDragLeave}\n        onDrop={onDrop}\n        className=\"w-full shadow-[0_0_6px_0_rgba(23,23,23,0.1)] text-[#b0adad] outline-none p-3 rounded-md h-52 border-dashed border-[#b0adad] hover:border-blue border-2 flex justify-center flex-col items-center hover:text-blue my-auto relative\"\n      >\n        <HiOutlineCloudUpload size={100} />\n        <span className=\"  w-1/2 mx-auto  mt-6\">\n          Информация, которую вы хотите добавить, должна быть представлена\n          ​​следующими способами: PNG, PDF, WORD\n        </span>\n        <input\n          type=\"file\"\n          value=\"\"\n          // onClick={onFileDrop}\n          onChange={onFileDrop}\n          className=\"absolute opacity-0 w-full h-full cursor-pointer\"\n        />\n      </div>\n      {fileList.length > 0 ? (\n        <div className=\"mt-12 w-full\">\n          {fileList.map((item, index, size) => (\n            <div key={index}>\n              <div className=\"relative flex mb-2.5 bg-gray/10 p-4 rounded-xl w-full justify-between\">\n                <div className=\"flex\">\n                  <img\n                    src={\n                      ImageConfig[item.type.split(\"/\")[1]] ||\n                      ImageConfig[\"default\"]\n                    }\n                    alt=\"\"\n                    width={50}\n                    height={50}\n                  />\n                  <div className=\"ml-6\">\n                    <p>{item.name}</p>\n                    <span className=\"flex\">\n                      <p>{item.size}&nbsp;b</p>\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex\">\n                  <span\n                    className=\"my-auto cursor-pointer\"\n                    onClick={() => fileRemove(item)}\n                  >\n                    <VscChromeClose />\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : null}\n    </>\n  );\n};\nDropFileInput.propTypes = {\n  onFileChange: PropTypes.func,\n};\nexport default DropFileInput;","import { Popconfirm, Table, Button, message, Drawer } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { axiosInstance, BASE_URL } from \"../../utils/axiosIntance\";\nimport file from \"../../img/file.png\";\nimport DropFileInput from \"./dropFile\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Requests = () => {\n    const history = useHistory();\n    const [data, setData] = useState([]);\n    const [openChange, setOpenChange] = useState(false);\n    const [order, setOrder] = useState({});\n    const [files, setFiles] = useState([]);\n    const [active, setActive] = useState(false);\n    const [code, setCode] = useState(\"\");\n    const [payBefore, setPayBefore] = useState(\"\");\n    const [payBeforeType, setPayBeforeType] = useState(\"\");\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const getData = () => {\n        axiosInstance\n            .get(\"/api/order/all?status=1&active=true\")\n            .then((data) => {\n                console.log(data.data);\n                setData(data.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const columns = [\n        {\n            title: \"No\",\n            dataIndex: \"surname\",\n\n            render: (text, record) => <div>{record?.lname}</div>,\n        },\n        {\n            title: \"Edara ady\",\n            dataIndex: \"name\",\n            render: (text, record) => <div>{record?.User?.companyName}</div>,\n        },\n        {\n            title: \"Ulanyjy\",\n            dataIndex: \"uploaded\",\n            render: (text, record) => <div>{record?.User?.fname}</div>,\n        },\n        {\n            title: \"Bellik\",\n            dataIndex: \"message\",\n        },\n\n        {\n            title: \"Action\",\n            render: (text, record) => (\n                <>\n                    {/* <Popconfirm placement=\"top\" title={\"Are you sure\"} onConfirm={handleConfirm} okText=\"Yes\" cancelText=\"No\">  */}\n                    <Button\n                        onClick={() => {\n                            setOpenChange(true);\n                            setOrder(record);\n                        }}\n                        type=\"primary\"\n                        style={{ borderRadius: \"7px\" }}\n                    >\n                        Accept\n                    </Button>\n                    {/* </Popconfirm> */}\n                    <Popconfirm\n                        placement=\"top\"\n                        title={\"Are you sure\"}\n                        onConfirm={() => Reject(record.id)}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button\n                            type=\"danger\"\n                            style={{ borderRadius: \"7px\", marginLeft: \"10px\" }}\n                        >\n                            Reject\n                        </Button>\n                    </Popconfirm>\n                </>\n            ),\n        },\n    ];\n\n    const onFileChange = (files) => {\n        console.log(files);\n        files.length > 0 && setActive(true);\n        files.length === 0 && setActive(true);\n        setFiles(files);\n    };\n\n    const makeOrder = () => {\n        if (\n            code.length > 0 &&\n            payBefore.length > 0 &&\n            payBeforeType.length > 0\n        ) {\n            const formData = new FormData();\n            console.log(\"order\", order);\n            formData.append(\"id\", order?.id);\n            formData.append(\"code\", code);\n            formData.append(\"payBefore\", payBefore);\n            formData.append(\"payBeforeType\", payBeforeType);\n            files?.map((item) => {\n                formData.append(\"filess\", item);\n            });\n            axiosInstance\n                .post(\"/api/order/make\", formData)\n                .then((data) => {\n                    console.log(data.data);\n                    message.success(\"Ustunlikli!\");\n                    getData();\n                    setOpenChange(false);\n                    setCode(\"\");\n                    setPayBefore(\"\");\n                    setPayBeforeType(\"\");\n                    setFiles([]);\n                    history.push({\n                        pathname: \"/orders\",\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            message.warn(\"Maglumatlary doly dolduryn!\");\n        }\n    };\n\n    const Reject = (id) => {\n        axiosInstance\n            .patch(\"/api/order/cancel/\" + id)\n            .then((data) => {\n                message.success(\"Yatyryldy!\");\n                getData();\n            })\n            .catch((err) => {\n                console.log(err);\n                message.warn(\"Gaytadan Barlan!\");\n            });\n    };\n\n    return (\n        <>\n            <Drawer\n                width={500}\n                placement=\"right\"\n                closable={true}\n                mask={true}\n                maskClosable={true}\n                onClose={() => setOpenChange(false)}\n                visible={openChange}\n            >\n                <div>\n                    <h2>Files:</h2>\n                    {order?.OrderDocs?.map((item) => {\n                        console.log(BASE_URL + item.fileName);\n                        return (\n                            <div style={{ width: \"100%\", display: \"flex\" }}>\n                                <a href={BASE_URL + \"/\" + item.fileName}>\n                                    {\" \"}\n                                    <img\n                                        style={{\n                                            marginRight: \"10px\",\n                                            objectFit: \"contain\",\n                                            height: \"50px\",\n                                        }}\n                                        src={file}\n                                        alt=\"file\"\n                                    />\n                                </a>\n                                <p style={{ lineHeight: \"50px\" }}>\n                                    {item.title}\n                                </p>\n                            </div>\n                        );\n                    })}\n                    <div style={{ width: \"100%\" }}>\n                        <input\n                            value={code}\n                            onChange={(e) => setCode(e.target.value)}\n                            className=\"h-[50px] rounded-[6px] bg-[#FFFFFF] w-[100%] border-[1px] border-[#E3E7EE] text-[#999999] pl-[12px] text-[16px] font-sans mb-4\"\n                            type=\"text\"\n                            placeholder=\"Code No\"\n                        />\n                        <input\n                            value={payBefore}\n                            onChange={(e) => setPayBefore(e.target.value)}\n                            className=\"h-[50px] rounded-[6px] bg-[#FFFFFF] w-[100%] border-[1px] border-[#E3E7EE] text-[#999999] pl-[12px] text-[16px] font-sans mb-4\"\n                            type=\"text\"\n                            placeholder=\"payBefore\"\n                        />\n                        <input\n                            value={payBeforeType}\n                            onChange={(e) => setPayBeforeType(e.target.value)}\n                            className=\"h-[50px] rounded-[6px] bg-[#FFFFFF] w-[100%] border-[1px] border-[#E3E7EE] text-[#999999] pl-[12px] text-[16px] font-sans mb-4\"\n                            type=\"text\"\n                            placeholder=\"Currency (USD)\"\n                        />\n                        <DropFileInput\n                            onFileChange={(files) => onFileChange(files)}\n                        />\n                        <button\n                            onClick={() => {\n                                active && makeOrder();\n                            }}\n                            className={`${\n                                active && \"!bg-blue !text-white \"\n                            } bg-[#DEE6F9] h-[50px] rounded-[5px] w-full mt-4 text-[18px] font-sans text-blue`}\n                        >\n                            Send\n                        </button>\n                    </div>\n                </div>\n            </Drawer>\n            <Table\n                columns={columns}\n                dataSource={data}\n                pagination={{\n                    pageSize: 50,\n                }}\n                scroll={{\n                    y: \"72vh\",\n                }}\n            />\n        </>\n    );\n};\n\nexport default Requests;\n","import axios from \"axios\";\nimport { token } from \"./token\";\n\nconst BASE_URL = \"http://localhost:8181\";\n// const BASE_URL = \"http://216.250.8.203:8181\";\n\nconst axiosInstance = axios.create({\n    baseURL: BASE_URL,\n    timeout: 10000,\n\n    headers: {\n        //  Authorization: 'Bearer ' + token(),\n        \"Content-Type\": \"application/json\",\n        Accept: \"*/*\",\n        // Authorization:'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6ImFkbWluIiwibmFtZSI6IktlcmltIiwiaWF0IjoxNjE2NDUwNjU3fQ.v8iyHYmwNlKVhLUA7LzxybICB8zzbVjRyXeFZbV7IPw'\n    },\n});\nexport { BASE_URL, axiosInstance };\n"],"names":["ImageConfig","default","pdf","pdfFile","png","pngFile","props","wrapperRef","useRef","useState","fileList","setFileList","ref","onDragEnter","current","classList","add","onDragLeave","remove","onDrop","className","size","type","value","onChange","e","newFile","target","files","console","log","updatedList","onFileChange","length","map","item","index","src","split","alt","width","height","name","onClick","file","splice","indexOf","fileRemove","history","useHistory","data","setData","openChange","setOpenChange","order","setOrder","setFiles","active","setActive","code","setCode","payBefore","setPayBefore","payBeforeType","setPayBeforeType","useEffect","getData","axiosInstance","then","catch","err","columns","title","dataIndex","render","text","record","lname","User","companyName","fname","style","borderRadius","placement","onConfirm","Reject","id","okText","cancelText","marginLeft","message","closable","mask","maskClosable","onClose","visible","OrderDocs","BASE_URL","fileName","display","href","marginRight","objectFit","lineHeight","placeholder","formData","FormData","append","push","pathname","makeOrder","dataSource","pagination","pageSize","scroll","y","axios","baseURL","timeout","headers","Accept"],"sourceRoot":""}